trigger:
- none

parameters:
- name: IsRun_Terminate_Old_Webs
  displayName: Terminate_Old_Webs tasks enabled
  type: boolean
  default: false
- name: IsRun_Tests
  displayName: Run Tests
  type: boolean
  default: false
- name: envName
  displayName: Environment
  type: string
  default: dev
  values:
    - dev
    - staging
    - prod

name: TrueLogic_${{ replace(replace(replace(variables['Build.SourceBranch'], 'refs/pull/', 'PR_'), 'refs/heads/', ''), '/', '_') }}_$(Build.BuildId)

pool:
  name: Truelogic-Dev-Server-SelfHosted-AWS

variables:
- group: TrueLogic
- name: JEST_HOST
  ${{ if eq( variables['Build.SourceBranch'], 'refs/heads/develop') }}:
    value: 'http://cbdev.si.truelogic.com.au/'
  ${{ if eq( variables['Build.SourceBranch'], 'refs/heads/staging') }}:
    value: 'http://cbstaging.si.truelogic.com.au/'
  ${{ if eq( variables['Build.SourceBranch'], 'refs/heads/main') }}:
    value: 'http://cbprod.si.truelogic.com.au/'
  ${{ if startsWith( variables['Build.SourceBranch'], 'refs/heads/feature/') }}:
    value: 'http://cbdev.si.truelogic.com.au/'
- name: Targetfolder 
  ${{ if eq( variables['Build.SourceBranch'], 'refs/heads/develop') }}:
    value: 'C:\Sites\cbdev.s.truelogic.com.au\'
  ${{ if eq( variables['Build.SourceBranch'], 'refs/heads/staging') }}:
    value: 'C:\Sites\cbstaging.s.truelogic.com.au\'
  ${{ if eq( variables['Build.SourceBranch'], 'refs/heads/main') }}:
    value: 'C:\Sites\cbprod.s.truelogic.com.au\'
  ${{ if startsWith( variables['Build.SourceBranch'], 'refs/heads/feature/') }}:
    value: 'C:\Sites\cbgithub.s.tuelogic.com.au\'

stages:
  - stage: Deploy_To_Lower_Environments
    displayName: "Deploy_To_Lower_Environments"
    jobs:
      - job:
        steps:
          - checkout: self
            clean: true
          - task: NodeTool@0
            displayName: "install node 16.x"
            inputs:
              versionSource: 'spec'
              versionSpec: '16.x'
          - task: CopyFiles@2
            displayName: "Copy files to Site directory"
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)\'
              Contents: |
                **\*
                !.git/**/*
                !.github/**/*
                !azure-devops/**/*
              TargetFolder: $(Targetfolder)
              OverWrite: true
          - task: Npm@1
            displayName: "npm install"
            inputs:
              command: 'install'
              workingDir: '$(Targetfolder)'
          - task: Grunt@0
            displayName: "grunt stage"
            inputs:
              gruntFile: '$(Targetfolder)\gruntfile.js'
              targets: 'stage'
              workingDirectory: '$(Targetfolder)\'
              gruntCli: 'node_modules/grunt/bin/grunt'
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'YourSonarCloudServiceConnection'
              organization: 'your-organization'
              scannerMode: 'CLI'
              configMode: 'file'
              cliProjectKey: 'your-project-key'
              cliProjectName: 'your-project-name'
              cliSources: '$(Build.SourcesDirectory)'
          - task: PowerShell@2
            displayName: "Stop CBSiteServices"
            inputs:
              targetType: 'inline'
              script: |
                & Start-Process powershell -ArgumentList "Stop-Service -Name CBSiteServices" -Verb RunAs
          - task: PowerShell@2
            displayName: "Remove CBSiteServices.log"
            inputs:
              targetType: 'inline'
              script: |
                & Start-Process powershell -ArgumentList "Remove-Item -path c:/PM2/CBSiteServices.log" -Verb RunAs
          - task: PowerShell@2
            displayName: "Start CBSiteServices"
            inputs:
              targetType: 'inline'
              script: |
                & Start-Process powershell -ArgumentList "Start-Service -Name CBSiteServices" -Verb RunAs
          - task: CmdLine@2
            displayName: "Set Variables and run tests"
            condition: and(succeeded(), eq(${{ parameters.IsRun_Tests }}, true))
            inputs:
              workingDirectory: '$(Targetfolder)'
              script: 'npm test'
            env:
              JEST_SLOWMO: '0'
              JEST_HOST: '$(JEST_HOST)'  
  - stage: Deploy_To_Production_Servers
    displayName: 'Deploy to ${{ parameters.envName }}'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))    
    jobs:
      - deployment: deploy_${{ replace(parameters.envName, '-', '_') }}_job
        displayName: Deploy to ${{ parameters.envName }}
        environment: truelogic-${{ parameters.envName }}
        strategy:
          runOnce:
            deploy:
              steps:
                - task: PowerShell@2
                  displayName: 'package and upload Site'
                  inputs:
                    filePath: '.\Config Files\deploy_scripts\site_upload.ps1'
                    pwsh: false
                - task: PowerShell@2
                  displayName: 'package and upload Skins'
                  inputs:
                    filePath: '.\Config Files\deploy_scripts\skins_upload.ps1'
                    pwsh: false
                - task: PowerShell@2
                  displayName: 'package and upload templates'
                  inputs:
                    filePath: '.\Config Files\deploy_scripts\template_includes_upload.ps1'
                    pwsh: false                    
                - task: PowerShell@2
                  displayName: 'Create Web Servers'
                  inputs:
                    filePath: '.\Config Files\deploy_scripts\create_webs.ps1'
                    pwsh: false
                - task: PowerShell@2
                  displayName: 'Swap Web Servers Deploy'
                  inputs:
                    filePath: '.\Config Files\deploy_scripts\deploy_webs.ps1'
                    pwsh: false
                - task: PowerShell@2
                  displayName: 'Terminate Dispatch'
                  inputs:
                    filePath: '.\Config Files\deploy_scripts\terminate_dispatch.ps1'
                    pwsh: false
  - stage: Terminate_Old_Webs
    displayName: 'Terminate Old Webs'
    condition: and(succeeded(), eq('${{ parameters.envName }}', 'prod'), eq(${{ parameters.IsRun_Terminate_Old_Webs }}, true), eq(variables['Build.Reason'], 'Manual'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: deploy_${{ replace(parameters.envName, '-', '_') }}_job
        displayName: Deploy to ${{ parameters.envName }}
        environment: truelogic-${{ parameters.envName }}
        strategy:
          runOnce:
            deploy:
              steps:
                - task: PowerShell@2
                  inputs:
                    filePath: '.\Config Files\deploy_scripts\terminate_webs.ps1'
                    pwsh: false
